input {
  file {
    path => "C:/panther/genelist_agg.csv"
    start_position => "beginning"
  }
}
filter {
  csv {
    separator => ","
    columns => [
	    "cra_chromosome",
		  "cra_chromosome_rank",
		  "cra_end_pos",
		  "cra_start_pos",
		  "cytoband",
		  "cytoband_sort",
		  "fullgo_bp_comp",
		  "fullgo_bp_exp",
		  "fullgo_cc_comp",
		  "fullgo_cc_exp",
		  "fullgo_mf_comp",
		  "fullgo_mf_exp",
		  "gene_ext_acc",
		  "gene_ext_id",
		  "gene_id",
		  "gene_name",
		  "gene_symbol",
		  "genelist_rowuid",
		  "genex_assay",
		  "panther_best_hit",
		  "panther_best_hit_acc",
		  "panther_best_hit_name",
		  "panther_best_hit_score",
		  "panther_bp",
		  "panther_bp_simple",
		  "panther_cc",
		  "panther_cc_simple",
		  "panther_mf",
		  "panther_mf_simple",
		  "panther_pc",
		  "panther_pc_simple",
		  "pathway",
		  "proteins",
		  "pub_chromosome",
		  "pub_chromosome_rank",
		  "pub_end_pos",
		  "pub_start_pos",
		  "public_id",
		  "reactome",
		  "snp_assay",
		  "source_id",
		  "species",
		  "transcripts"
	  ]
  }
  mutate {
    convert => {"cra_chromosome_rank"=>"integer"}
    convert => {"cra_end_pos"=>"integer"}
    convert => {"cra_start_pos"=>"integer"}
    convert => {"gene_id"=>"integer"}
    convert => {"genelist_rowuid"=>"integer"}
    convert => {"panther_best_hit"=>"integer"}
    convert => {"pub_chromosome_rank"=>"integer"}
    convert => {"pub_end_pos"=>"integer"}
    convert => {"pub_start_pos"=>"integer"}
    convert => {"source_id"=>"integer"}
  }	  
	ruby {
    code => "
      hash = event.to_hash
      hash.each do |k,v|
        if v == nil || v == 'NULL'
          event.remove(k)
        end
      end
    "
    }
}
output {
   elasticsearch {
     hosts => "http://localhost:9201"
     index => "genes"	 
  }
stdout {
	codec => "rubydebug"
	}
}